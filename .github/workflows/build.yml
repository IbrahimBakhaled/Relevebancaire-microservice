name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    types: [opened, synchronize, reopened]


jobs:
  test-container:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        env:
          MYSQL_DATABASE: "releve-bancaire-cdg"
          MYSQL_ROOT_PASSWORD: "root"
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
#        volumes:
#          - mysql-relevebancaire-volume:/var/lib/relevebancaire
##          - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
#          - ./custom.cnf:/etc/mysql/conf.d/custom.cnf
    steps:
      - name: Verify MySQL connection from container
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client
          mysql --host mydb -uroot -ppassword -e "SHOW DATABASES"
  compile:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Setup MySQL 8.0
        uses: haltuf/mysql-action@master
        with:
          host port: 3306
          character set server: 'utf8mb4'
          collation server: 'utf8mb4_general_ci'
          mysql version: '8.0.28'
          mysql database: 'Releve-Bancaire-CDG'
          mysql user: 'root'
          mysql password: 'root'
      - name: Compile with Maven
        run: mvn -f pom.xml clean install dependency:copy-dependencies
  test:
    runs-on: ubuntu-latest
    name: Tests
    needs: compile
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Run unit tests
        run: mvn test
  analysis:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=IbrahimBakhaled_relevebancaire
  build:
    runs-on: ubuntu-latest
    name: Build
    needs: analysis
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build Project
        run: mvn -B package --file pom.xml
#        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=IbrahimBakhaled_relevebancaire -Dsonar.login=7819bacad97afd1cb240d34d541c0122ef742d84